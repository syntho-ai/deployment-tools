
{{- if empty .Values.backend.manualSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: "backend-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "backend-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $userPassword := (get $secretData "backend.user.password") | default (include "syntho-core.backend.user.get-password" .) }}
  backend.user.password: {{ $userPassword | required "This should not happen: blank output from'syntho-core.backend.get-password' template" | b64enc | quote }}
  backend.secret_key: {{ include "syntho-core.backend.get-secret-key" . | required "This should not happen: blank output from'syntho-core.backend.get-secret-key' template" | b64enc | quote }}
  backend.db.password: {{ .Values.backend.db.password | b64enc | quote }}
{{- end }}