name: Release CLI

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'

jobs:
  release-cli:
    runs-on: ubuntu-latest
    name: "Release Syntho CLI and upload to PyPI"
    defaults:
      run:
        shell: bash
        working-directory: ./cli
    permissions:
      # Used to authenticate to PyPI via OIDC.
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Poetry build & publish
        run: poetry run pre-build && poetry build
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
